package me.ionar.salhack.module.exploit;

import me.ionar.salhack.events.network.EventNetworkPacketEvent;
import me.ionar.salhack.managers.ModuleManager;
import me.ionar.salhack.module.Module;
import me.ionar.salhack.module.misc.AutoDuperModule;
import me.ionar.salhack.module.misc.ManualDupeModule;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.entity.passive.AbstractChestHorse;
import net.minecraft.network.play.client.CPacketUseEntity;

public class MountBypassModule extends Module
{
    public MountBypassModule()
    {
        super("MountBypass", new String[] {""}, "Might bypass the preventing of mounting chested animals on servers that block it", "NONE", -1, ModuleType.EXPLOIT);
    }

    private AutoDuperModule _autoDuperModule;
    private ManualDupeModule _manualDupeModule;

    public void init()
    {
        _autoDuperModule = (AutoDuperModule) ModuleManager.Get().GetMod(AutoDuperModule.class);
        _manualDupeModule = (ManualDupeModule) ModuleManager.Get().GetMod(ManualDupeModule.class);
    }

    @EventHandler
    private Listener<EventNetworkPacketEvent> onPacketEventSend = new Listener<>(event ->
    {
        if (event.getPacket() instanceof CPacketUseEntity && this.noBypass())
        {
            CPacketUseEntity packet = (CPacketUseEntity) event.getPacket();

            if (packet.getEntityFromWorld(mc.world) instanceof AbstractChestHorse)
            {
                if (packet.getAction() == CPacketUseEntity.Action.INTERACT_AT)
                {
                    event.cancel();
                }
            }
        }
    });

    private boolean noBypass() {
        if(_autoDuperModule.isEnabled())
            return _autoDuperModule.ignoreMountBypass() ? false : true;
        else if(_manualDupeModule.isEnabled())
            return _manualDupeModule.ignoreMountBypass() ? false : true;
        return true;
    }

}
